---
title: "Sevenr Project"
subtitle: "Report"
format: html
editor: visual
execute:
  echo: true
---

```{r}
#| label: load-pkgs
#| message: false
library(tidyverse)
library(tidymodels)
```

## Introduction and data

```{r}
#| label: load-billion
billion <- read.csv("data/billionaires.csv")

glimpse(billion)
```

The dataset we are working with is a large listing of billionaires across the world along with information about them collected at three different time points. There are 2614 observations and 22 variables. Not every observation is a unique billionaire; many are repeated up to three times (one at each time point). In addition, not every 22 variable is statistically interesting; many, such as name, rank, and company.name are identifying variables. However, the other variables are statistically useful and interesting, and our goal is to investigate them.

The dataset was created in 2016 by Caroline Freund and Sarah Oliver, who are (or were) researchers at the Peterson Institute for International Economics. They compiled the list of individuals from Forbes billionaire lists dating from 1996 to 2015. A large percentage of the additional information collected was publicly available, coming from sources such as Forbes, news articles, and company websites.

One caveat about this dataset, and any data categorizing wealth, is that wealth is subjective. For example, Forbes made many choices in determining who to include in their lists which were used as sources for this dataset. One such choice was to exclude billionaires that obtained wealth from official positions (e.g. high government roles, state leader positions, etc.). Another choice was to exclude billionaires who obtained their wealth via illegal methods.

<https://www.piie.com/publications/working-papers/origins-superrich-billionaire-characteristics-database?ResearchID=2917>

, how, cases, relevant variables

Ethical concerns?

Our research question is: "do the predictors of a linear regression modeling billionaire wealth change depending on if the wealth was inherited or not inherited?" That is, do the factors that are associated with higher levels of billionaire wealth change given that the billionaire had inherited money to begin with or not?

Our hypothesis is that ?

## Methodology

```{r}
billion |> 
  group_by(year) |> 
  summarize(mean_gdp = mean(location.gdp))

billion2001 <- billion |>
  filter(year == 2001) |>
```

Multivariate linear regression.

Dataset cleaning (lots of 0s for some reason)

Model building

Other tools

## Results

Two (or more) linear regression models

```{r}
#| label: data-cleaning

billion2001 <- billion2001 |>
  mutate(
    industry = if_else(industry == 0, "Other", industry),
    industry = if_else(industry == "Energy" | industry == "Mining and metals", "Energy, mining, and metals", industry),
    industry = if_else(str_detect(industry, "Technology"), "Technology", industry),
    industry = if_else(industry == "Diversified financial", "Money management", industry),
    industry = if_else(industry == "Hedge funds", "Money management", industry),
    industry = if_else(industry == "Venture Capital", "Money management", industry),
    industry = if_else(industry == "Private equity/leveraged buyout", "Money management", industry),
    industry = if_else(industry == "Money Management", "Money management", industry),
    industry = if_else(industry == "Constrution" | industry == "Real Estate", "Real estate, construction", industry),
    industry = if_else(industry == "Consumer" | industry == "Retail, Restaurant", "Consumer goods, retail, restaurants", industry)
  )
```

```{r}
#| label: grouping by inheritance
inheritance_grouping <- billion2001 |>
  mutate(inherited = if_else(str_detect(wealth.how.inherited, "not inherited"), "not inherited", "inherited"))

yes_inherited <- inheritance_grouping |>
  filter(inherited == "inherited")

not_inherited <- inheritance_grouping |>
  filter(inherited == "not inherited")
```

other: 0

construction

consumer goods, retail, restaurant

money management: diversified financial, hedge funds, venture capital, private equity/lev buyout

energy: mining and metals

media

non consumer industrial

real estate

technology: computer, medical

```{r}
#| label: location-regression

#regression by location.gdp for both groups
linear_reg() |>
  set_engine("lm") |>
  fit(wealth.worth.in.billions ~ location.gdp, data = billion2001) |>
  tidy()
 
billion2001 |>
  ggplot(aes(x = location.gdp, y = wealth.worth.in.billions)) +
  geom_point() +
  geom_smooth(method = "lm", se = F) 
 
#regression for location.gdp for inherited
linear_reg() |>
  set_engine("lm") |>
  fit(wealth.worth.in.billions ~ location.gdp, data = yes_inherited) |>
  tidy()
 
yes_inherited |>
  ggplot(aes(x = location.gdp, y = wealth.worth.in.billions)) +
  geom_point() +
  geom_smooth(method = "lm", se = F) 

#regression for location.gdp for not inherited
linear_reg() |>
  set_engine("lm") |>
  fit(wealth.worth.in.billions ~ location.gdp, data = not_inherited) |>
  tidy()
 
not_inherited |>
  ggplot(aes(x = location.gdp, y = wealth.worth.in.billions)) +
  geom_point() +
  geom_smooth(method = "lm", se = F) 
```

```{r}
#| label: industry-regression

#regression by industry for both groups
linear_reg() |>
  set_engine("lm") |>
  fit(wealth.worth.in.billions ~ industry, data = billion2001) |>
  tidy()
 
billion2001 |>
  ggplot(aes(x = industry, y = wealth.worth.in.billions)) +
  geom_point() +
  geom_smooth(method = "lm", se = F) 
 
#regression by industry for inherited
linear_reg() |>
  set_engine("lm") |>
  fit(wealth.worth.in.billions ~ industry, data = yes_inherited) |>
  tidy()
 
yes_inherited |>
  ggplot(aes(x = industry, y = wealth.worth.in.billions)) +
  geom_point() +
  geom_smooth(method = "lm", se = F) 
 
#regression by industry for not inherited
linear_reg() |>
  set_engine("lm") |>
  fit(wealth.worth.in.billions ~ industry, data = not_inherited) |>
  tidy()
 
not_inherited |>
  ggplot(aes(x = industry, y = wealth.worth.in.billions)) +
  geom_point() +
  geom_smooth(method = "lm", se = F) 
```

```{r}
#| label: age-regression

#regression by age for both groups
linear_reg() |>
    set_engine("lm") |>
    fit(wealth.worth.in.billions ~ demographics.age, data = billion2001) |>
    tidy()
 
billion2001 |>
    ggplot(aes(x = demographics.age, y = wealth.worth.in.billions)) +
    geom_point() +
    geom_smooth(method = "lm", se = F) 
 
#regression by age for inherited
linear_reg() |>
    set_engine("lm") |>
    fit(wealth.worth.in.billions ~ demographics.age, data = yes_inherited) |>
    tidy()
 
 yes_inherited |>
    ggplot(aes(x = demographics.age, y = wealth.worth.in.billions)) +
    geom_point() +
    geom_smooth(method = "lm", se = F) 
 
#regression by age for not inherited
 linear_reg() |>
  set_engine("lm") |>
  fit(wealth.worth.in.billions ~ demographics.age, data = not_inherited) |>
  tidy()
 
not_inherited |>
  ggplot(aes(x = demographics.age, y = wealth.worth.in.billions)) +
  geom_point() +
  geom_smooth(method = "lm", se = F) 
```

## Changelog

4/3:

-   filtered year and variables (variable_filter)

-   grouped by inheritance (inheritance_grouping, yes_inherited, not_inherited)

-   regressions by location, age, sector; univariate models from total, then individual group data frames

4/5:

-   renamed variable_filter to billion2001, renamed wealth.how.industry to industry

-   removed selecting variables (aka leaving all variables in)

-   added comments

-   commented out glimpse(billion)

-   cleaned up and combined industry levels (check underneath for groupings)

-   changed regression by company.sector to regression by industry

-   
